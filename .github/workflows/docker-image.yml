name: Docker Image CI

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        env:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo git tag version: ${GITHUB_REF:10}
          sudo docker login --username=${username} --password=${password}
          sudo docker build -t mojiee/uniapp-mojie-music:${GITHUB_REF:10} .
          sudo docker push mojiee/uniapp-mojie-music:${GITHUB_REF:10}

      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: MyReleaseMessage

# name: Docker Image CI

# on:
#   push:
#     tags:
#       - v*

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Get version
#         id: get_version
#         run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v5
#         with:
#           push: true
#           tags: mojiee/uniapp-mojie-music:${{ steps.get_version.outputs.VERSION }}
